{"ast":null,"code":"var _jsxFileName = \"/home/landonrepp/Desktop/youtube-steamer/Client/IonicApp/src/components/Media/MediaPlayer.tsx\";\nimport React from 'react';\nimport { IonGrid, IonRow, IonCol, IonRange } from '@ionic/react';\nimport { Howl } from 'howler';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { MediaService } from '../../services/MediaService';\nimport { faPlay, faBackward, faForward, faPause } from '@fortawesome/free-solid-svg-icons';\nimport './MediaPlayer.css';\nimport { GETURL } from '../../Constants';\n\nclass MediaPlayer extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.Sounds = new Howl({\n      src: [\"\"],\n      format: [\"mp3\"]\n    });\n    this.songSelected = false;\n    this.state = {\n      playing: false,\n      progress: 0\n    };\n\n    this.nextSong = () => {\n      let i = 0;\n      const len = this.props.videos.length;\n\n      for (i = 0; i < len; i++) {\n        if (this.props.videos[i].selected) {\n          this.playSong(this.props.videos[(i + 1) % len]);\n          return;\n        }\n      }\n    };\n\n    this.previousSong = () => {\n      let i = 0;\n      const len = this.props.videos.length;\n\n      for (i = 0; i < len; i++) {\n        if (this.props.videos[i].selected) {\n          this.playSong(this.props.videos[(i - 1) % len]);\n        }\n      }\n    };\n\n    this.setProgress = () => {\n      if (this.Sounds.state() == \"loaded\") {\n        this.setState({\n          progress: Number(this.Sounds.seek()) / this.Sounds.duration() * 100\n        });\n      }\n    };\n\n    this.CreateHowl = video => {\n      let videoUrl = `${GETURL}/youtube?v=${video.videoID}&f=${video.ext}`;\n      return new Howl({\n        src: videoUrl,\n        format: \"mp3\",\n        volume: 0.1,\n        onend: id => {\n          console.log(\"song ended\");\n          this.nextSong();\n        }\n      });\n    };\n\n    this.togglePlaying = () => {\n      if (!this.songSelected && this.props.videos.length > 0) {\n        this.songSelected = true;\n        this.playSong(this.props.videos[0]);\n      } else if (this.state.playing) {\n        this.Sounds.pause();\n        this.state.playing = false;\n      } else {\n        this.Sounds.play();\n        this.state.playing = true;\n      }\n\n      this.setState(this.state);\n    };\n\n    this.playSong = video => {\n      this.props.videos.forEach((element, index) => {\n        if (element.videoID == video.videoID) {\n          this.props.videos[index].selected = true;\n        } else {\n          this.props.videos[index].selected = false;\n        }\n      });\n      this.songSelected = true;\n      let videoID = video.videoID;\n      let ext = video.ext;\n      this.Sounds.unload();\n      this.Sounds = this.CreateHowl(video);\n      this.Sounds.play();\n      this.state.playing = true;\n      video.selected = true;\n      this.setState({\n        videos: this.props.videos\n      });\n    };\n\n    this.changeSongProgress = e => {\n      let val = e.target.value;\n\n      if (val && val != this.state.progress) {\n        this.state.progress = val;\n        this.Sounds.seek(val / 100 * this.Sounds.duration());\n      }\n    };\n\n    this.MusicList = async () => {\n      let videoInformation = await MediaService.getVideoInformation();\n      let results = videoInformation;\n      this.props.videos = results;\n      this.setState({\n        videos: results\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.MusicList();\n    setInterval(this.setProgress, 1000);\n  }\n\n  render() {\n    const element = React.createElement(\"div\", {\n      onMouseUp: this.changeSongProgress,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(IonGrid, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(IonRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(IonCol, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }), React.createElement(IonCol, {\n      size: \"8\",\n      sizeLg: \"4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(IonRange, {\n      className: \"media-progress-bar\",\n      value: this.state.progress,\n      onIonChange: this.changeSongProgress,\n      color: \"secondary\",\n      pin: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    })), React.createElement(IonCol, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    })), React.createElement(IonRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(IonCol, {\n      sizeLg: \"3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }), React.createElement(IonCol, {\n      size: \"1\",\n      style: {\n        \"min-width\": \"max-content\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, React.createElement(FontAwesomeIcon, {\n      size: \"2x\",\n      onClick: this.previousSong,\n      icon: faBackward,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    })), React.createElement(IonCol, {\n      size: \"1\",\n      style: {\n        \"min-width\": \"max-content\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, React.createElement(FontAwesomeIcon, {\n      className: \"pause-play\",\n      onClick: this.togglePlaying,\n      size: \"2x\",\n      icon: this.state.playing ? faPause : faPlay,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    })), React.createElement(IonCol, {\n      size: \"1\",\n      style: {\n        \"min-width\": \"max-content\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, React.createElement(FontAwesomeIcon, {\n      size: \"2x\",\n      onClick: this.nextSong,\n      icon: faForward,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    })), React.createElement(IonCol, {\n      sizeLg: \"3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }))));\n    return element;\n  }\n\n}\n\nexport default MediaPlayer;","map":{"version":3,"sources":["/home/landonrepp/Desktop/youtube-steamer/Client/IonicApp/src/components/Media/MediaPlayer.tsx"],"names":["React","IonGrid","IonRow","IonCol","IonRange","Howl","FontAwesomeIcon","MediaService","faPlay","faBackward","faForward","faPause","GETURL","MediaPlayer","Component","Sounds","src","format","songSelected","state","playing","progress","nextSong","i","len","props","videos","length","selected","playSong","previousSong","setProgress","setState","Number","seek","duration","CreateHowl","video","videoUrl","videoID","ext","volume","onend","id","console","log","togglePlaying","pause","play","forEach","element","index","unload","changeSongProgress","e","val","target","value","MusicList","videoInformation","getVideoInformation","results","componentDidMount","setInterval","render"],"mappings":"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","sourcesContent":["import React, { useState, Suspense } from 'react';\nimport { IonIcon, IonGrid, IonRow, IonCol, IonItem, IonRange, IonVirtualScroll, IonContent } from '@ionic/react';\nimport ReactDOM from 'react-dom'\nimport { arrowBackCircleOutline, arrowForwardCircleOutline, play, } from 'ionicons/icons'\nimport {Howl, Howler} from 'howler';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { MediaService } from '../../services/MediaService'\nimport { faCoffee, faPlay, faBackward, faForward, faPause } from '@fortawesome/free-solid-svg-icons'\nimport './MediaPlayer.css'\nimport { GETURL } from '../../Constants';\nimport { ScrollView } from 'react-native';\nimport ListHandler from '../ListHandler/ListHandler';\nimport { Video } from '../../Models/MediaModels';\n\ninterface MeadiaPlayerProps {}\n\n\nexport interface ProgressBarProps {\n    progress:number\n}\n \nexport interface ProgressBarState {\n    \n}\n \n\nexport interface MediaPlayerProps {\n    videos:Video[]\n}\n \nexport interface MediaPlayerState {\n    \n}\nexport interface State{\n    playing:boolean,\n    progress:number\n}\n \nclass MediaPlayer extends React.Component<MediaPlayerProps, MediaPlayerState> {\n    Sounds = new Howl({src: [\"\"], format:[\"mp3\"]});\n    songSelected = false;\n    state:State = {\n        playing:false, \n        progress:0\n    };\n    nextSong = ()=>{\n        let i = 0;\n        const len = this.props.videos.length;\n        for(i = 0; i < len; i++){\n            if(this.props.videos[i].selected){\n                this.playSong(this.props.videos[(i+1)%len]);\n                return;\n            }\n        }\n    };\n    previousSong =()=>{\n        let i = 0;\n        const len = this.props.videos.length;\n        for(i = 0; i < len; i++){\n            if(this.props.videos[i].selected){\n                this.playSong(this.props.videos[(i-1)%len]);\n            }\n        }\n    }\n    setProgress = () =>{\n        if(this.Sounds.state() == \"loaded\"){\n            this.setState({progress:Number(this.Sounds.seek())/this.Sounds.duration()*100});\n        }\n        \n    };\n    \n    CreateHowl = (video:Video)=>{\n        let videoUrl = `${GETURL}/youtube?v=${video.videoID}&f=${video.ext}`\n        return new Howl({\n            src:videoUrl, format:\"mp3\", volume:0.1,\n            onend: (id)=>{\n                console.log(\"song ended\");\n                this.nextSong();\n            }\n        });\n    };\n    togglePlaying = () =>{\n        if(!this.songSelected && this.props.videos.length > 0){\n            this.songSelected = true;\n            this.playSong(this.props.videos[0]);\n        }\n        else if(this.state.playing){\n            this.Sounds.pause();\n            this.state.playing = false;\n        }\n        else{\n            this.Sounds.play();\n            this.state.playing = true;\n        }\n        this.setState(this.state);\n    };\n\n    playSong = (video:Video)=>{\n        this.props.videos.forEach((element,index) => {\n            if(element.videoID == video.videoID){\n                this.props.videos[index].selected = true;\n            }\n            else{\n                this.props.videos[index].selected = false;\n            }\n        });\n        this.songSelected = true;\n        let videoID = video.videoID;\n        let ext = video.ext;\n        \n\n        this.Sounds.unload();\n        this.Sounds = this.CreateHowl(video);\n        this.Sounds.play();\n        this.state.playing = true;\n        video.selected = true;\n        this.setState({videos:this.props.videos});\n    };\n    changeSongProgress = (e:any)=>{\n        let val = (e.target as any).value as number;\n        if(val && val != this.state.progress){\n            this.state.progress = val;\n            this.Sounds.seek(val/100 * this.Sounds.duration())\n        }\n    }\n\n    MusicList = async()=>{\n        let videoInformation = await MediaService.getVideoInformation();\n        let results:any[] = videoInformation;\n        this.props.videos = results;\n        this.setState({videos:results})\n    };\n\n    componentDidMount(){\n        this.MusicList();\n        setInterval(this.setProgress,1000);\n    };\n\n    render() { \n        const element = (\n            <div onMouseUp={this.changeSongProgress}>\n                <IonGrid>\n                    <IonRow>\n                        <IonCol>\n                        </IonCol>\n                        <IonCol size=\"8\" sizeLg=\"4\">\n                            <IonRange className=\"media-progress-bar\" value={this.state.progress} onIonChange={this.changeSongProgress} color=\"secondary\" pin={false} />\n                        </IonCol>\n                        <IonCol>\n                        </IonCol>\n                    </IonRow>\n                    <IonRow>\n                        <IonCol sizeLg=\"3\">\n                        </IonCol>\n                        <IonCol size=\"1\" style={{\"min-width\":\"max-content\"}}>\n                            <FontAwesomeIcon size=\"2x\" onClick={this.previousSong} icon={faBackward} />\n                        </IonCol>\n                        <IonCol size=\"1\" style={{\"min-width\":\"max-content\"}}>\n                            <FontAwesomeIcon className=\"pause-play\" onClick={this.togglePlaying} size=\"2x\" icon={this.state.playing? faPause:faPlay} />\n                        </IonCol>\n                        <IonCol size=\"1\" style={{\"min-width\":\"max-content\"}}>\n                            <FontAwesomeIcon size=\"2x\" onClick={this.nextSong} icon={ faForward } />\n                        </IonCol>\n                        <IonCol sizeLg=\"3\">\n                        </IonCol>\n                    </IonRow>\n                </IonGrid>\n            </div>\n        );\n        return element;\n    }\n}\n \nexport default MediaPlayer;\n"]},"metadata":{},"sourceType":"module"}