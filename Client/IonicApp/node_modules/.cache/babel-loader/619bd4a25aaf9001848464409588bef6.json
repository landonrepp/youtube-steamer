{"ast":null,"code":"var _jsxFileName = \"/home/landonrepp/Desktop/youtube-steamer/Client/IonicApp/src/components/Media/MediaPlayer.tsx\";\nimport React, { Suspense } from 'react';\nimport { IonGrid, IonRow, IonCol, IonItem, IonRange } from '@ionic/react';\nimport { Howl } from 'howler';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { MediaService } from '../../services/MediaService';\nimport { faPlay, faBackward, faForward, faPause } from '@fortawesome/free-solid-svg-icons';\nimport './MediaPlayer.css';\nimport { GETURL } from '../../Constants';\n\nclass MediaPlayer extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.Sounds = new Howl({\n      src: [\"\"],\n      format: [\"mp3\"]\n    });\n    this.songSelected = false;\n    this.state = {\n      playing: false,\n      videos: [],\n      progress: 0\n    };\n\n    this.nextSong = () => {\n      let i = 0;\n      const len = this.state.videos.length;\n\n      for (i = 0; i < len; i++) {\n        if (this.state.videos[i].selected) {\n          this.playSong(this.state.videos[(i + 1) % len]);\n          return;\n        }\n      }\n    };\n\n    this.previousSong = () => {\n      let i = 0;\n      const len = this.state.videos.length;\n\n      for (i = 0; i < len; i++) {\n        if (this.state.videos[i].selected) {\n          this.playSong(this.state.videos[(i - 1) % len]);\n        }\n      }\n    };\n\n    this.setProgress = () => {\n      if (this.Sounds.state() == \"loaded\") {\n        this.setState({\n          progress: Number(this.Sounds.seek()) / this.Sounds.duration() * 100\n        });\n      }\n    };\n\n    this.MusicList = async () => {\n      let videoInformation = await MediaService.getVideoInformation();\n      let results = videoInformation;\n      this.state.videos = results;\n      this.setState({\n        videos: results\n      });\n    };\n\n    this.CreateHowl = video => {\n      let videoUrl = `${GETURL}/youtube?v=${video.videoID}&f=${video.ext}`;\n      return new Howl({\n        src: videoUrl,\n        format: \"mp3\",\n        onend: id => {\n          console.log(\"song ended\");\n          this.nextSong();\n        }\n      });\n    };\n\n    this.togglePlaying = () => {\n      if (!this.songSelected && this.state.videos.length > 0) {\n        this.songSelected = true;\n        this.playSong(this.state.videos[0]);\n      } else if (this.state.playing) {\n        this.Sounds.pause();\n        this.state.playing = false;\n      } else {\n        this.Sounds.play();\n        this.state.playing = true;\n      }\n\n      this.setState(this.state);\n    };\n\n    this.playSong = video => {\n      this.state.videos.forEach((element, index) => {\n        if (element.videoID == video.videoID) {\n          this.state.videos[index].selected = true;\n        } else {\n          this.state.videos[index].selected = false;\n        }\n      });\n      this.songSelected = true;\n      let videoID = video.videoID;\n      let ext = video.ext;\n      this.Sounds.unload();\n      this.Sounds = this.CreateHowl(video);\n      this.Sounds.play();\n      this.state.playing = true;\n      video.selected = true;\n      this.setState({\n        videos: this.state.videos\n      });\n    };\n\n    this.changeSongProgress = e => {\n      console.log(e);\n      e.target;\n    };\n  }\n\n  componentDidMount() {\n    this.MusicList();\n    setInterval(this.setProgress, 1000);\n  }\n\n  render() {\n    const element = React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(IonGrid, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(IonRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(IonCol, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(Suspense, {\n      fallback: React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, \"Loading...\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, this.state.videos.map(result => {\n      return React.createElement(IonItem, {\n        button: true,\n        className: `${result.selected ? \"button-selected\" : \"\"}`,\n        onClick: this.playSong.bind(this, result),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, result.title);\n    }))))), React.createElement(IonRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, React.createElement(IonCol, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }), React.createElement(IonCol, {\n      size: \"8\",\n      sizeLg: \"4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, React.createElement(IonItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, React.createElement(IonRange, {\n      className: \"media-progress-bar\",\n      onIonChange: this.changeSongProgress,\n      color: \"secondary\",\n      pin: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }))), React.createElement(IonCol, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    })), React.createElement(IonRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, React.createElement(IonCol, {\n      sizeLg: \"5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }), React.createElement(IonCol, {\n      size: \"1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, React.createElement(FontAwesomeIcon, {\n      size: \"2x\",\n      onClick: this.previousSong,\n      icon: faBackward,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    })), React.createElement(IonCol, {\n      size: \"1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, React.createElement(FontAwesomeIcon, {\n      className: \"pause-play\",\n      onClick: this.togglePlaying,\n      size: \"2x\",\n      icon: this.state.playing ? faPause : faPlay,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    })), React.createElement(IonCol, {\n      size: \"1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, React.createElement(FontAwesomeIcon, {\n      size: \"2x\",\n      onClick: this.nextSong,\n      icon: faForward,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    })), React.createElement(IonCol, {\n      sizeLg: \"5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }))));\n    return element;\n  }\n\n}\n\nexport default MediaPlayer;","map":{"version":3,"sources":["/home/landonrepp/Desktop/youtube-steamer/Client/IonicApp/src/components/Media/MediaPlayer.tsx"],"names":["React","Suspense","IonGrid","IonRow","IonCol","IonItem","IonRange","Howl","FontAwesomeIcon","MediaService","faPlay","faBackward","faForward","faPause","GETURL","MediaPlayer","Component","Sounds","src","format","songSelected","state","playing","videos","progress","nextSong","i","len","length","selected","playSong","previousSong","setProgress","setState","Number","seek","duration","MusicList","videoInformation","getVideoInformation","results","CreateHowl","video","videoUrl","videoID","ext","onend","id","console","log","togglePlaying","pause","play","forEach","element","index","unload","changeSongProgress","e","target","componentDidMount","setInterval","render","map","result","bind","title"],"mappings":"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","sourcesContent":["import React, { useState, Suspense } from 'react';\nimport { IonIcon, IonGrid, IonRow, IonCol, IonItem, IonRange } from '@ionic/react';\nimport ReactDOM from 'react-dom'\nimport { arrowBackCircleOutline, arrowForwardCircleOutline, play, } from 'ionicons/icons'\nimport {Howl, Howler} from 'howler';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { MediaService } from '../../services/MediaService'\nimport { faCoffee, faPlay, faBackward, faForward, faPause } from '@fortawesome/free-solid-svg-icons'\nimport './MediaPlayer.css'\nimport { GETURL } from '../../Constants';\n\ninterface MeadiaPlayerProps {}\n\n\nexport interface ProgressBarProps {\n    progress:number\n}\n \nexport interface ProgressBarState {\n    \n}\n \n\nexport interface MediaPlayerProps {\n    \n}\n \nexport interface MediaPlayerState {\n    \n}\ninterface Video{\n    selected:boolean,\n    ext:string,\n    title:string,\n    videoID:string\n}\ninterface State{\n    playing:boolean,\n    videos:Video[],\n    progress:number\n}\n \nclass MediaPlayer extends React.Component<MediaPlayerProps, MediaPlayerState> {\n    Sounds = new Howl({src: [\"\"], format:[\"mp3\"]});\n    songSelected = false;\n    state:State = {\n        playing:false, \n        videos:[],\n        progress:0\n    };\n    nextSong = ()=>{\n        let i = 0;\n        const len = this.state.videos.length;\n        for(i = 0; i < len; i++){\n            if(this.state.videos[i].selected){\n                this.playSong(this.state.videos[(i+1)%len]);\n                return;\n            }\n        }\n    };\n    previousSong =()=>{\n        let i = 0;\n        const len = this.state.videos.length;\n        for(i = 0; i < len; i++){\n            if(this.state.videos[i].selected){\n                this.playSong(this.state.videos[(i-1)%len]);\n            }\n        }\n    }\n    setProgress = () =>{\n        if(this.Sounds.state() == \"loaded\"){\n            this.setState({progress:Number(this.Sounds.seek())/this.Sounds.duration()*100});\n        }\n        \n    };\n    \n\n    MusicList = async()=>{\n        let videoInformation = await MediaService.getVideoInformation();\n        let results:any[] = videoInformation;\n        this.state.videos = results;\n        this.setState({videos:results})\n    };\n    \n    CreateHowl = (video:Video)=>{\n        let videoUrl = `${GETURL}/youtube?v=${video.videoID}&f=${video.ext}`\n        return new Howl({\n            src:videoUrl, format:\"mp3\",\n            onend: (id)=>{\n                console.log(\"song ended\")\n                this.nextSong();\n            }\n        });\n    };\n    togglePlaying = () =>{\n        if(!this.songSelected && this.state.videos.length > 0){\n            this.songSelected = true;\n            this.playSong(this.state.videos[0]);\n        }\n        else if(this.state.playing){\n            this.Sounds.pause();\n            this.state.playing = false;\n        }\n        else{\n            this.Sounds.play();\n            this.state.playing = true;\n        }\n        this.setState(this.state);\n    };\n\n    playSong = (video:Video)=>{\n        this.state.videos.forEach((element,index) => {\n            if(element.videoID == video.videoID){\n                this.state.videos[index].selected = true;\n            }\n            else{\n                this.state.videos[index].selected = false;\n            }\n        });\n        this.songSelected = true;\n        let videoID = video.videoID;\n        let ext = video.ext;\n        \n\n        this.Sounds.unload();\n        this.Sounds = this.CreateHowl(video);\n        this.Sounds.play();\n        this.state.playing = true;\n        video.selected = true;\n        this.setState({videos:this.state.videos});\n    };\n    changeSongProgress = (e:CustomEvent)=>{\n        console.log(e);\n        e.target\n    }\n\n    componentDidMount(){\n        this.MusicList();\n        setInterval(this.setProgress,1000);\n    };\n\n    render() { \n        const element = (\n            <div>\n                <IonGrid>\n                    \n                    <IonRow>\n                        <IonCol>\n                            <div>\n                                <Suspense fallback= {<div>Loading...</div>}>\n                                    {this.state.videos.map(result =>{\n                                        return <IonItem button className={`${result.selected?\"button-selected\":\"\"}`}  onClick={this.playSong.bind(this,result)}>{result.title}</IonItem>;\n                                    })}\n                                </Suspense>\n                            </div>\n                        </IonCol>\n                    </IonRow>\n                    <IonRow>\n                        <IonCol>\n                        </IonCol>\n                        <IonCol size=\"8\" sizeLg=\"4\">\n                            <IonItem>\n                                <IonRange className=\"media-progress-bar\" onIonChange={this.changeSongProgress} color=\"secondary\" pin={false} />\n                            </IonItem>\n                        </IonCol>\n                        <IonCol>\n                        </IonCol>\n                    </IonRow>\n                    <IonRow>\n                        <IonCol sizeLg=\"5\">\n                        </IonCol>\n                        <IonCol size=\"1\">\n                            <FontAwesomeIcon size=\"2x\" onClick={this.previousSong} icon={faBackward} />\n                        </IonCol>\n                        <IonCol size=\"1\">\n                            <FontAwesomeIcon className=\"pause-play\" onClick={this.togglePlaying} size=\"2x\" icon={this.state.playing? faPause:faPlay} />\n                        </IonCol>\n                        <IonCol size=\"1\">\n                            <FontAwesomeIcon size=\"2x\" onClick={this.nextSong} icon={ faForward } />\n                        </IonCol>\n                        <IonCol sizeLg=\"5\">\n                        </IonCol>\n                    </IonRow>\n                </IonGrid>\n            </div>\n        );\n        return element;\n    }\n}\n \nexport default MediaPlayer;\n"]},"metadata":{},"sourceType":"module"}