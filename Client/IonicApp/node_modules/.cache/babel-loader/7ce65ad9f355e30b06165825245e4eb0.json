{"ast":null,"code":"import { r as registerInstance, d as createEvent, c as getIonMode, h, H as Host, e as getElement } from './core-80bde1aa.js';\nimport './config-3c7f3790.js';\nimport { f as findItemLabel, a as renderHiddenInput } from './helpers-46f4a262.js';\nimport { c as createColorClasses, h as hostContext } from './theme-18cbe2cc.js';\n\nvar Checkbox =\n/** @class */\nfunction () {\n  function Checkbox(hostRef) {\n    var _this = this;\n\n    registerInstance(this, hostRef);\n    this.inputId = \"ion-cb-\" + checkboxIds++;\n    /**\n     * The name of the control, which is submitted with the form data.\n     */\n\n    this.name = this.inputId;\n    /**\n     * If `true`, the checkbox is selected.\n     */\n\n    this.checked = false;\n    /**\n     * If `true`, the checkbox will visually appear as indeterminate.\n     */\n\n    this.indeterminate = false;\n    /**\n     * If `true`, the user cannot interact with the checkbox.\n     */\n\n    this.disabled = false;\n    /**\n     * The value of the toggle does not mean if it's checked or not, use the `checked`\n     * property for that.\n     *\n     * The value of a toggle is analogous to the value of a `<input type=\"checkbox\">`,\n     * it's only used when the toggle participates in a native `<form>`.\n     */\n\n    this.value = 'on';\n\n    this.onClick = function () {\n      _this.setFocus();\n\n      _this.checked = !_this.checked;\n      _this.indeterminate = false;\n    };\n\n    this.onFocus = function () {\n      _this.ionFocus.emit();\n    };\n\n    this.onBlur = function () {\n      _this.ionBlur.emit();\n    };\n\n    this.ionChange = createEvent(this, \"ionChange\", 7);\n    this.ionFocus = createEvent(this, \"ionFocus\", 7);\n    this.ionBlur = createEvent(this, \"ionBlur\", 7);\n    this.ionStyle = createEvent(this, \"ionStyle\", 7);\n  }\n\n  Checkbox.prototype.componentWillLoad = function () {\n    this.emitStyle();\n  };\n\n  Checkbox.prototype.checkedChanged = function (isChecked) {\n    this.ionChange.emit({\n      checked: isChecked,\n      value: this.value\n    });\n    this.emitStyle();\n  };\n\n  Checkbox.prototype.disabledChanged = function () {\n    this.emitStyle();\n  };\n\n  Checkbox.prototype.emitStyle = function () {\n    this.ionStyle.emit({\n      'checkbox-checked': this.checked,\n      'interactive-disabled': this.disabled\n    });\n  };\n\n  Checkbox.prototype.setFocus = function () {\n    if (this.buttonEl) {\n      this.buttonEl.focus();\n    }\n  };\n\n  Checkbox.prototype.render = function () {\n    var _a;\n\n    var _this = this;\n\n    var _b = this,\n        inputId = _b.inputId,\n        indeterminate = _b.indeterminate,\n        disabled = _b.disabled,\n        checked = _b.checked,\n        value = _b.value,\n        color = _b.color,\n        el = _b.el;\n\n    var labelId = inputId + '-lbl';\n    var mode = getIonMode(this);\n    var label = findItemLabel(el);\n\n    if (label) {\n      label.id = labelId;\n    }\n\n    renderHiddenInput(true, el, this.name, checked ? value : '', disabled);\n    var path = indeterminate ? h(\"path\", {\n      d: \"M6 12L18 12\"\n    }) : h(\"path\", {\n      d: \"M5.9,12.5l3.8,3.8l8.8-8.8\"\n    });\n\n    if (mode === 'md') {\n      path = indeterminate ? h(\"path\", {\n        d: \"M2 12H22\"\n      }) : h(\"path\", {\n        d: \"M1.73,12.91 8.1,19.28 22.79,4.59\"\n      });\n    }\n\n    return h(Host, {\n      onClick: this.onClick,\n      role: \"checkbox\",\n      \"aria-disabled\": disabled ? 'true' : null,\n      \"aria-checked\": \"\" + checked,\n      \"aria-labelledby\": labelId,\n      class: Object.assign(Object.assign({}, createColorClasses(color)), (_a = {}, _a[mode] = true, _a['in-item'] = hostContext('ion-item', el), _a['checkbox-checked'] = checked, _a['checkbox-disabled'] = disabled, _a['checkbox-indeterminate'] = indeterminate, _a['interactive'] = true, _a))\n    }, h(\"svg\", {\n      class: \"checkbox-icon\",\n      viewBox: \"0 0 24 24\"\n    }, path), h(\"button\", {\n      type: \"button\",\n      onFocus: this.onFocus,\n      onBlur: this.onBlur,\n      disabled: this.disabled,\n      ref: function ref(btnEl) {\n        return _this.buttonEl = btnEl;\n      }\n    }));\n  };\n\n  Object.defineProperty(Checkbox.prototype, \"el\", {\n    get: function get() {\n      return getElement(this);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Checkbox, \"watchers\", {\n    get: function get() {\n      return {\n        \"checked\": [\"checkedChanged\"],\n        \"disabled\": [\"disabledChanged\"]\n      };\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Checkbox, \"style\", {\n    get: function get() {\n      return \":host{--background-checked:var(--ion-color-primary,#3880ff);--border-color-checked:var(--ion-color-primary,#3880ff);--checkmark-color:var(--ion-color-primary-contrast,#fff);--checkmark-width:1;--transition:none;display:inline-block;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:2}:host(.ion-color){--background-checked:var(--ion-color-base);--border-color-checked:var(--ion-color-base);--checkmark-color:var(--ion-color-contrast)}button{left:0;top:0;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;position:absolute;width:100%;height:100%;border:0;background:transparent;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;outline:none}:host-context([dir=rtl]) button,[dir=rtl] button{left:unset;right:unset;right:0}button::-moz-focus-inner{border:0}.checkbox-icon{border-radius:var(--border-radius);display:block;position:relative;width:100%;height:100%;-webkit-transition:var(--transition);transition:var(--transition);border-width:var(--border-width);border-style:var(--border-style);border-color:var(--border-color);background:var(--background);-webkit-box-sizing:border-box;box-sizing:border-box}.checkbox-icon path{fill:none;stroke:var(--checkmark-color);stroke-width:var(--checkmark-width);opacity:0}:host(.checkbox-checked) .checkbox-icon,:host(.checkbox-indeterminate) .checkbox-icon{border-color:var(--border-color-checked);background:var(--background-checked)}:host(.checkbox-checked) .checkbox-icon path,:host(.checkbox-indeterminate) .checkbox-icon path{opacity:1}:host(.checkbox-disabled){pointer-events:none}:host{--border-radius:50%;--border-width:1px;--border-style:solid;--border-color:rgba(var(--ion-text-color-rgb,0,0,0),0.23);--background:var(--ion-item-background,var(--ion-background-color,#fff));--size:26px;width:var(--size);height:var(--size)}:host(.checkbox-disabled){opacity:.3}:host(.in-item){margin-left:0;margin-right:8px;margin-top:10px;margin-bottom:9px;display:block;position:static}\\@supports ((-webkit-margin-start:0) or (margin-inline-start:0)) or (-webkit-margin-start:0){:host(.in-item){margin-left:unset;margin-right:unset;-webkit-margin-start:0;margin-inline-start:0;-webkit-margin-end:8px;margin-inline-end:8px}}:host(.in-item[slot=start]){margin-left:2px;margin-right:20px;margin-top:8px;margin-bottom:8px}\\@supports ((-webkit-margin-start:0) or (margin-inline-start:0)) or (-webkit-margin-start:0){:host(.in-item[slot=start]){margin-left:unset;margin-right:unset;-webkit-margin-start:2px;margin-inline-start:2px;-webkit-margin-end:20px;margin-inline-end:20px}}\";\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return Checkbox;\n}();\n\nvar checkboxIds = 0;\nexport { Checkbox as ion_checkbox };","map":{"version":3,"sources":["/home/landonrepp/Desktop/youtube-steamer/Client/IonicApp/node_modules/@ionic/core/dist/esm-es5/ion-checkbox-ios.entry.js"],"names":["r","registerInstance","d","createEvent","c","getIonMode","h","H","Host","e","getElement","f","findItemLabel","a","renderHiddenInput","createColorClasses","hostContext","Checkbox","hostRef","_this","inputId","checkboxIds","name","checked","indeterminate","disabled","value","onClick","setFocus","onFocus","ionFocus","emit","onBlur","ionBlur","ionChange","ionStyle","prototype","componentWillLoad","emitStyle","checkedChanged","isChecked","disabledChanged","buttonEl","focus","render","_a","_b","color","el","labelId","mode","label","id","path","role","class","Object","assign","viewBox","type","ref","btnEl","defineProperty","get","enumerable","configurable","ion_checkbox"],"mappings":"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","sourcesContent":["import { r as registerInstance, d as createEvent, c as getIonMode, h, H as Host, e as getElement } from './core-80bde1aa.js';\nimport './config-3c7f3790.js';\nimport { f as findItemLabel, a as renderHiddenInput } from './helpers-46f4a262.js';\nimport { c as createColorClasses, h as hostContext } from './theme-18cbe2cc.js';\nvar Checkbox = /** @class */ (function () {\n    function Checkbox(hostRef) {\n        var _this = this;\n        registerInstance(this, hostRef);\n        this.inputId = \"ion-cb-\" + checkboxIds++;\n        /**\n         * The name of the control, which is submitted with the form data.\n         */\n        this.name = this.inputId;\n        /**\n         * If `true`, the checkbox is selected.\n         */\n        this.checked = false;\n        /**\n         * If `true`, the checkbox will visually appear as indeterminate.\n         */\n        this.indeterminate = false;\n        /**\n         * If `true`, the user cannot interact with the checkbox.\n         */\n        this.disabled = false;\n        /**\n         * The value of the toggle does not mean if it's checked or not, use the `checked`\n         * property for that.\n         *\n         * The value of a toggle is analogous to the value of a `<input type=\"checkbox\">`,\n         * it's only used when the toggle participates in a native `<form>`.\n         */\n        this.value = 'on';\n        this.onClick = function () {\n            _this.setFocus();\n            _this.checked = !_this.checked;\n            _this.indeterminate = false;\n        };\n        this.onFocus = function () {\n            _this.ionFocus.emit();\n        };\n        this.onBlur = function () {\n            _this.ionBlur.emit();\n        };\n        this.ionChange = createEvent(this, \"ionChange\", 7);\n        this.ionFocus = createEvent(this, \"ionFocus\", 7);\n        this.ionBlur = createEvent(this, \"ionBlur\", 7);\n        this.ionStyle = createEvent(this, \"ionStyle\", 7);\n    }\n    Checkbox.prototype.componentWillLoad = function () {\n        this.emitStyle();\n    };\n    Checkbox.prototype.checkedChanged = function (isChecked) {\n        this.ionChange.emit({\n            checked: isChecked,\n            value: this.value\n        });\n        this.emitStyle();\n    };\n    Checkbox.prototype.disabledChanged = function () {\n        this.emitStyle();\n    };\n    Checkbox.prototype.emitStyle = function () {\n        this.ionStyle.emit({\n            'checkbox-checked': this.checked,\n            'interactive-disabled': this.disabled,\n        });\n    };\n    Checkbox.prototype.setFocus = function () {\n        if (this.buttonEl) {\n            this.buttonEl.focus();\n        }\n    };\n    Checkbox.prototype.render = function () {\n        var _a;\n        var _this = this;\n        var _b = this, inputId = _b.inputId, indeterminate = _b.indeterminate, disabled = _b.disabled, checked = _b.checked, value = _b.value, color = _b.color, el = _b.el;\n        var labelId = inputId + '-lbl';\n        var mode = getIonMode(this);\n        var label = findItemLabel(el);\n        if (label) {\n            label.id = labelId;\n        }\n        renderHiddenInput(true, el, this.name, (checked ? value : ''), disabled);\n        var path = indeterminate\n            ? h(\"path\", { d: \"M6 12L18 12\" })\n            : h(\"path\", { d: \"M5.9,12.5l3.8,3.8l8.8-8.8\" });\n        if (mode === 'md') {\n            path = indeterminate\n                ? h(\"path\", { d: \"M2 12H22\" })\n                : h(\"path\", { d: \"M1.73,12.91 8.1,19.28 22.79,4.59\" });\n        }\n        return (h(Host, { onClick: this.onClick, role: \"checkbox\", \"aria-disabled\": disabled ? 'true' : null, \"aria-checked\": \"\" + checked, \"aria-labelledby\": labelId, class: Object.assign(Object.assign({}, createColorClasses(color)), (_a = {}, _a[mode] = true, _a['in-item'] = hostContext('ion-item', el), _a['checkbox-checked'] = checked, _a['checkbox-disabled'] = disabled, _a['checkbox-indeterminate'] = indeterminate, _a['interactive'] = true, _a)) }, h(\"svg\", { class: \"checkbox-icon\", viewBox: \"0 0 24 24\" }, path), h(\"button\", { type: \"button\", onFocus: this.onFocus, onBlur: this.onBlur, disabled: this.disabled, ref: function (btnEl) { return _this.buttonEl = btnEl; } })));\n    };\n    Object.defineProperty(Checkbox.prototype, \"el\", {\n        get: function () { return getElement(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Checkbox, \"watchers\", {\n        get: function () {\n            return {\n                \"checked\": [\"checkedChanged\"],\n                \"disabled\": [\"disabledChanged\"]\n            };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Checkbox, \"style\", {\n        get: function () { return \":host{--background-checked:var(--ion-color-primary,#3880ff);--border-color-checked:var(--ion-color-primary,#3880ff);--checkmark-color:var(--ion-color-primary-contrast,#fff);--checkmark-width:1;--transition:none;display:inline-block;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:2}:host(.ion-color){--background-checked:var(--ion-color-base);--border-color-checked:var(--ion-color-base);--checkmark-color:var(--ion-color-contrast)}button{left:0;top:0;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;position:absolute;width:100%;height:100%;border:0;background:transparent;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;outline:none}:host-context([dir=rtl]) button,[dir=rtl] button{left:unset;right:unset;right:0}button::-moz-focus-inner{border:0}.checkbox-icon{border-radius:var(--border-radius);display:block;position:relative;width:100%;height:100%;-webkit-transition:var(--transition);transition:var(--transition);border-width:var(--border-width);border-style:var(--border-style);border-color:var(--border-color);background:var(--background);-webkit-box-sizing:border-box;box-sizing:border-box}.checkbox-icon path{fill:none;stroke:var(--checkmark-color);stroke-width:var(--checkmark-width);opacity:0}:host(.checkbox-checked) .checkbox-icon,:host(.checkbox-indeterminate) .checkbox-icon{border-color:var(--border-color-checked);background:var(--background-checked)}:host(.checkbox-checked) .checkbox-icon path,:host(.checkbox-indeterminate) .checkbox-icon path{opacity:1}:host(.checkbox-disabled){pointer-events:none}:host{--border-radius:50%;--border-width:1px;--border-style:solid;--border-color:rgba(var(--ion-text-color-rgb,0,0,0),0.23);--background:var(--ion-item-background,var(--ion-background-color,#fff));--size:26px;width:var(--size);height:var(--size)}:host(.checkbox-disabled){opacity:.3}:host(.in-item){margin-left:0;margin-right:8px;margin-top:10px;margin-bottom:9px;display:block;position:static}\\@supports ((-webkit-margin-start:0) or (margin-inline-start:0)) or (-webkit-margin-start:0){:host(.in-item){margin-left:unset;margin-right:unset;-webkit-margin-start:0;margin-inline-start:0;-webkit-margin-end:8px;margin-inline-end:8px}}:host(.in-item[slot=start]){margin-left:2px;margin-right:20px;margin-top:8px;margin-bottom:8px}\\@supports ((-webkit-margin-start:0) or (margin-inline-start:0)) or (-webkit-margin-start:0){:host(.in-item[slot=start]){margin-left:unset;margin-right:unset;-webkit-margin-start:2px;margin-inline-start:2px;-webkit-margin-end:20px;margin-inline-end:20px}}\"; },\n        enumerable: true,\n        configurable: true\n    });\n    return Checkbox;\n}());\nvar checkboxIds = 0;\nexport { Checkbox as ion_checkbox };\n"]},"metadata":{},"sourceType":"module"}