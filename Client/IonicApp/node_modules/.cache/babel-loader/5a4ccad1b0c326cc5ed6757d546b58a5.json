{"ast":null,"code":"import { __awaiter, __generator } from \"tslib\";\nimport { r as registerInstance, d as createEvent, f as readTask, c as getIonMode, h, H as Host, e as getElement } from './core-80bde1aa.js';\nimport './config-3c7f3790.js';\nimport { d as debounceEvent, f as findItemLabel } from './helpers-46f4a262.js';\nimport { c as createColorClasses } from './theme-18cbe2cc.js';\n\nvar Textarea =\n/** @class */\nfunction () {\n  function class_1(hostRef) {\n    var _this = this;\n\n    registerInstance(this, hostRef);\n    this.inputId = \"ion-input-\" + textareaIds++;\n    this.didBlurAfterEdit = false;\n    this.hasFocus = false;\n    /**\n     * Indicates whether and how the text value should be automatically capitalized as it is entered/edited by the user.\n     */\n\n    this.autocapitalize = 'none';\n    /**\n     * This Boolean attribute lets you specify that a form control should have input focus when the page loads.\n     */\n\n    this.autofocus = false;\n    /**\n     * If `true`, the value will be cleared after focus upon edit. Defaults to `true` when `type` is `\"password\"`, `false` for all other types.\n     */\n\n    this.clearOnEdit = false;\n    /**\n     * Set the amount of time, in milliseconds, to wait to trigger the `ionChange` event after each keystroke.\n     */\n\n    this.debounce = 0;\n    /**\n     * If `true`, the user cannot interact with the textarea.\n     */\n\n    this.disabled = false;\n    /**\n     * The name of the control, which is submitted with the form data.\n     */\n\n    this.name = this.inputId;\n    /**\n     * If `true`, the user cannot modify the value.\n     */\n\n    this.readonly = false;\n    /**\n     * If `true`, the user must fill in a value before submitting a form.\n     */\n\n    this.required = false;\n    /**\n     * If `true`, the element will have its spelling and grammar checked.\n     */\n\n    this.spellcheck = false;\n    /**\n     * If `true`, the element height will increase based on the value.\n     */\n\n    this.autoGrow = false;\n    /**\n     * The value of the textarea.\n     */\n\n    this.value = '';\n\n    this.onInput = function (ev) {\n      if (_this.nativeInput) {\n        _this.value = _this.nativeInput.value;\n      }\n\n      _this.emitStyle();\n\n      _this.ionInput.emit(ev);\n    };\n\n    this.onFocus = function () {\n      _this.hasFocus = true;\n\n      _this.focusChange();\n\n      _this.ionFocus.emit();\n    };\n\n    this.onBlur = function () {\n      _this.hasFocus = false;\n\n      _this.focusChange();\n\n      _this.ionBlur.emit();\n    };\n\n    this.onKeyDown = function () {\n      _this.checkClearOnEdit();\n    };\n\n    this.ionChange = createEvent(this, \"ionChange\", 7);\n    this.ionInput = createEvent(this, \"ionInput\", 7);\n    this.ionStyle = createEvent(this, \"ionStyle\", 7);\n    this.ionBlur = createEvent(this, \"ionBlur\", 7);\n    this.ionFocus = createEvent(this, \"ionFocus\", 7);\n  }\n\n  class_1.prototype.debounceChanged = function () {\n    this.ionChange = debounceEvent(this.ionChange, this.debounce);\n  };\n\n  class_1.prototype.disabledChanged = function () {\n    this.emitStyle();\n  };\n  /**\n   * Update the native input element when the value changes\n   */\n\n\n  class_1.prototype.valueChanged = function () {\n    var nativeInput = this.nativeInput;\n    var value = this.getValue();\n\n    if (nativeInput && nativeInput.value !== value) {\n      nativeInput.value = value;\n    }\n\n    this.runAutoGrow();\n    this.emitStyle();\n    this.ionChange.emit({\n      value: value\n    });\n  };\n\n  class_1.prototype.connectedCallback = function () {\n    this.emitStyle();\n    this.debounceChanged();\n    {\n      this.el.dispatchEvent(new CustomEvent('ionInputDidLoad', {\n        detail: this.el\n      }));\n    }\n  };\n\n  class_1.prototype.disconnectedCallback = function () {\n    {\n      document.dispatchEvent(new CustomEvent('ionInputDidUnload', {\n        detail: this.el\n      }));\n    }\n  };\n\n  class_1.prototype.componentDidLoad = function () {\n    this.runAutoGrow();\n  }; // TODO: performance hit, this cause layout thrashing\n\n\n  class_1.prototype.runAutoGrow = function () {\n    var nativeInput = this.nativeInput;\n\n    if (nativeInput && this.autoGrow) {\n      readTask(function () {\n        nativeInput.style.height = 'inherit';\n        nativeInput.style.height = nativeInput.scrollHeight + 'px';\n      });\n    }\n  };\n  /**\n   * Sets focus on the specified `ion-textarea`. Use this method instead of the global\n   * `input.focus()`.\n   */\n\n\n  class_1.prototype.setFocus = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        if (this.nativeInput) {\n          this.nativeInput.focus();\n        }\n\n        return [2\n        /*return*/\n        ];\n      });\n    });\n  };\n  /**\n   * Returns the native `<textarea>` element used under the hood.\n   */\n\n\n  class_1.prototype.getInputElement = function () {\n    return Promise.resolve(this.nativeInput);\n  };\n\n  class_1.prototype.emitStyle = function () {\n    this.ionStyle.emit({\n      'interactive': true,\n      'textarea': true,\n      'input': true,\n      'interactive-disabled': this.disabled,\n      'has-placeholder': this.placeholder != null,\n      'has-value': this.hasValue(),\n      'has-focus': this.hasFocus\n    });\n  };\n  /**\n   * Check if we need to clear the text input if clearOnEdit is enabled\n   */\n\n\n  class_1.prototype.checkClearOnEdit = function () {\n    if (!this.clearOnEdit) {\n      return;\n    } // Did the input value change after it was blurred and edited?\n\n\n    if (this.didBlurAfterEdit && this.hasValue()) {\n      // Clear the input\n      this.value = '';\n    } // Reset the flag\n\n\n    this.didBlurAfterEdit = false;\n  };\n\n  class_1.prototype.focusChange = function () {\n    // If clearOnEdit is enabled and the input blurred but has a value, set a flag\n    if (this.clearOnEdit && !this.hasFocus && this.hasValue()) {\n      this.didBlurAfterEdit = true;\n    }\n\n    this.emitStyle();\n  };\n\n  class_1.prototype.hasValue = function () {\n    return this.getValue() !== '';\n  };\n\n  class_1.prototype.getValue = function () {\n    return this.value || '';\n  };\n\n  class_1.prototype.render = function () {\n    var _a;\n\n    var _this = this;\n\n    var mode = getIonMode(this);\n    var value = this.getValue();\n    var labelId = this.inputId + '-lbl';\n    var label = findItemLabel(this.el);\n\n    if (label) {\n      label.id = labelId;\n    }\n\n    return h(Host, {\n      \"aria-disabled\": this.disabled ? 'true' : null,\n      class: Object.assign(Object.assign({}, createColorClasses(this.color)), (_a = {}, _a[mode] = true, _a))\n    }, h(\"textarea\", {\n      class: \"native-textarea\",\n      ref: function (el) {\n        return _this.nativeInput = el;\n      },\n      autoCapitalize: this.autocapitalize,\n      autoFocus: this.autofocus,\n      disabled: this.disabled,\n      maxLength: this.maxlength,\n      minLength: this.minlength,\n      name: this.name,\n      placeholder: this.placeholder || '',\n      readOnly: this.readonly,\n      required: this.required,\n      spellCheck: this.spellcheck,\n      cols: this.cols,\n      rows: this.rows,\n      wrap: this.wrap,\n      onInput: this.onInput,\n      onBlur: this.onBlur,\n      onFocus: this.onFocus,\n      onKeyDown: this.onKeyDown\n    }, value));\n  };\n\n  Object.defineProperty(class_1.prototype, \"el\", {\n    get: function () {\n      return getElement(this);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(class_1, \"watchers\", {\n    get: function () {\n      return {\n        \"debounce\": [\"debounceChanged\"],\n        \"disabled\": [\"disabledChanged\"],\n        \"value\": [\"valueChanged\"]\n      };\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(class_1, \"style\", {\n    get: function () {\n      return \".sc-ion-textarea-md-h{--background:initial;--color:initial;--placeholder-color:initial;--placeholder-font-style:initial;--placeholder-font-weight:initial;--placeholder-opacity:.5;--padding-top:0;--padding-bottom:0;--padding-start:0;--border-radius:0;display:block;position:relative;-ms-flex:1;flex:1;width:100%;-webkit-box-sizing:border-box;box-sizing:border-box;background:var(--background);color:var(--color);font-family:var(--ion-font-family,inherit);white-space:pre-wrap;z-index:2}.ion-color.sc-ion-textarea-md-h{background:initial;color:var(--ion-color-base)}ion-item.sc-ion-textarea-md-h, ion-item .sc-ion-textarea-md-h{-ms-flex-item-align:baseline;align-self:baseline}ion-item.sc-ion-textarea-md-h:not(.item-label), ion-item:not(.item-label) .sc-ion-textarea-md-h{--padding-start:0}.native-textarea.sc-ion-textarea-md{border-radius:var(--border-radius);margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;padding-left:var(--padding-start);padding-right:var(--padding-end);padding-top:var(--padding-top);padding-bottom:var(--padding-bottom);font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-indent:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit;display:block;width:100%;max-width:100%;max-height:100%;border:0;outline:none;background:transparent;-webkit-box-sizing:border-box;box-sizing:border-box;resize:none;-webkit-appearance:none;-moz-appearance:none;appearance:none}\\@supports ((-webkit-margin-start:0) or (margin-inline-start:0)) or (-webkit-margin-start:0){.native-textarea.sc-ion-textarea-md{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--padding-start);padding-inline-start:var(--padding-start);-webkit-padding-end:var(--padding-end);padding-inline-end:var(--padding-end)}}.native-textarea.sc-ion-textarea-md::-webkit-input-placeholder{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-textarea.sc-ion-textarea-md::-moz-placeholder{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-textarea.sc-ion-textarea-md:-ms-input-placeholder{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-textarea.sc-ion-textarea-md::-ms-input-placeholder{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-textarea.sc-ion-textarea-md::placeholder{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-textarea[disabled].sc-ion-textarea-md{opacity:.4}.cloned-input.sc-ion-textarea-md{left:0;top:0;position:absolute;pointer-events:none}[dir=rtl].sc-ion-textarea-md-h .cloned-input.sc-ion-textarea-md, [dir=rtl] .sc-ion-textarea-md-h .cloned-input.sc-ion-textarea-md, [dir=rtl].sc-ion-textarea-md .cloned-input.sc-ion-textarea-md{left:unset;right:unset;right:0}.sc-ion-textarea-md-h{--padding-top:10px;--padding-end:0;--padding-bottom:11px;--padding-start:8px;margin-left:0;margin-right:0;margin-top:8px;margin-bottom:0;font-size:inherit}.item-label-floating.sc-ion-textarea-md-h, .item-label-floating .sc-ion-textarea-md-h, .item-label-stacked.sc-ion-textarea-md-h, .item-label-stacked .sc-ion-textarea-md-h{--padding-top:8px;--padding-bottom:8px;--padding-start:0}\";\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return class_1;\n}();\n\nvar textareaIds = 0;\nexport { Textarea as ion_textarea };","map":{"version":3,"sources":["/home/landonrepp/Desktop/Cecil Reborn/Client/Cecil/node_modules/@ionic/core/dist/esm-es5/ion-textarea-md.entry.js"],"names":["__awaiter","__generator","r","registerInstance","d","createEvent","f","readTask","c","getIonMode","h","H","Host","e","getElement","debounceEvent","findItemLabel","createColorClasses","Textarea","class_1","hostRef","_this","inputId","textareaIds","didBlurAfterEdit","hasFocus","autocapitalize","autofocus","clearOnEdit","debounce","disabled","name","readonly","required","spellcheck","autoGrow","value","onInput","ev","nativeInput","emitStyle","ionInput","emit","onFocus","focusChange","ionFocus","onBlur","ionBlur","onKeyDown","checkClearOnEdit","ionChange","ionStyle","prototype","debounceChanged","disabledChanged","valueChanged","getValue","runAutoGrow","connectedCallback","el","dispatchEvent","CustomEvent","detail","disconnectedCallback","document","componentDidLoad","style","height","scrollHeight","setFocus","_a","focus","getInputElement","Promise","resolve","placeholder","hasValue","render","mode","labelId","label","id","class","Object","assign","color","ref","autoCapitalize","autoFocus","maxLength","maxlength","minLength","minlength","readOnly","spellCheck","cols","rows","wrap","defineProperty","get","enumerable","configurable","ion_textarea"],"mappings":"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","sourcesContent":["import { __awaiter, __generator } from \"tslib\";\nimport { r as registerInstance, d as createEvent, f as readTask, c as getIonMode, h, H as Host, e as getElement } from './core-80bde1aa.js';\nimport './config-3c7f3790.js';\nimport { d as debounceEvent, f as findItemLabel } from './helpers-46f4a262.js';\nimport { c as createColorClasses } from './theme-18cbe2cc.js';\nvar Textarea = /** @class */ (function () {\n    function class_1(hostRef) {\n        var _this = this;\n        registerInstance(this, hostRef);\n        this.inputId = \"ion-input-\" + textareaIds++;\n        this.didBlurAfterEdit = false;\n        this.hasFocus = false;\n        /**\n         * Indicates whether and how the text value should be automatically capitalized as it is entered/edited by the user.\n         */\n        this.autocapitalize = 'none';\n        /**\n         * This Boolean attribute lets you specify that a form control should have input focus when the page loads.\n         */\n        this.autofocus = false;\n        /**\n         * If `true`, the value will be cleared after focus upon edit. Defaults to `true` when `type` is `\"password\"`, `false` for all other types.\n         */\n        this.clearOnEdit = false;\n        /**\n         * Set the amount of time, in milliseconds, to wait to trigger the `ionChange` event after each keystroke.\n         */\n        this.debounce = 0;\n        /**\n         * If `true`, the user cannot interact with the textarea.\n         */\n        this.disabled = false;\n        /**\n         * The name of the control, which is submitted with the form data.\n         */\n        this.name = this.inputId;\n        /**\n         * If `true`, the user cannot modify the value.\n         */\n        this.readonly = false;\n        /**\n         * If `true`, the user must fill in a value before submitting a form.\n         */\n        this.required = false;\n        /**\n         * If `true`, the element will have its spelling and grammar checked.\n         */\n        this.spellcheck = false;\n        /**\n         * If `true`, the element height will increase based on the value.\n         */\n        this.autoGrow = false;\n        /**\n         * The value of the textarea.\n         */\n        this.value = '';\n        this.onInput = function (ev) {\n            if (_this.nativeInput) {\n                _this.value = _this.nativeInput.value;\n            }\n            _this.emitStyle();\n            _this.ionInput.emit(ev);\n        };\n        this.onFocus = function () {\n            _this.hasFocus = true;\n            _this.focusChange();\n            _this.ionFocus.emit();\n        };\n        this.onBlur = function () {\n            _this.hasFocus = false;\n            _this.focusChange();\n            _this.ionBlur.emit();\n        };\n        this.onKeyDown = function () {\n            _this.checkClearOnEdit();\n        };\n        this.ionChange = createEvent(this, \"ionChange\", 7);\n        this.ionInput = createEvent(this, \"ionInput\", 7);\n        this.ionStyle = createEvent(this, \"ionStyle\", 7);\n        this.ionBlur = createEvent(this, \"ionBlur\", 7);\n        this.ionFocus = createEvent(this, \"ionFocus\", 7);\n    }\n    class_1.prototype.debounceChanged = function () {\n        this.ionChange = debounceEvent(this.ionChange, this.debounce);\n    };\n    class_1.prototype.disabledChanged = function () {\n        this.emitStyle();\n    };\n    /**\n     * Update the native input element when the value changes\n     */\n    class_1.prototype.valueChanged = function () {\n        var nativeInput = this.nativeInput;\n        var value = this.getValue();\n        if (nativeInput && nativeInput.value !== value) {\n            nativeInput.value = value;\n        }\n        this.runAutoGrow();\n        this.emitStyle();\n        this.ionChange.emit({ value: value });\n    };\n    class_1.prototype.connectedCallback = function () {\n        this.emitStyle();\n        this.debounceChanged();\n        {\n            this.el.dispatchEvent(new CustomEvent('ionInputDidLoad', {\n                detail: this.el\n            }));\n        }\n    };\n    class_1.prototype.disconnectedCallback = function () {\n        {\n            document.dispatchEvent(new CustomEvent('ionInputDidUnload', {\n                detail: this.el\n            }));\n        }\n    };\n    class_1.prototype.componentDidLoad = function () {\n        this.runAutoGrow();\n    };\n    // TODO: performance hit, this cause layout thrashing\n    class_1.prototype.runAutoGrow = function () {\n        var nativeInput = this.nativeInput;\n        if (nativeInput && this.autoGrow) {\n            readTask(function () {\n                nativeInput.style.height = 'inherit';\n                nativeInput.style.height = nativeInput.scrollHeight + 'px';\n            });\n        }\n    };\n    /**\n     * Sets focus on the specified `ion-textarea`. Use this method instead of the global\n     * `input.focus()`.\n     */\n    class_1.prototype.setFocus = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                if (this.nativeInput) {\n                    this.nativeInput.focus();\n                }\n                return [2 /*return*/];\n            });\n        });\n    };\n    /**\n     * Returns the native `<textarea>` element used under the hood.\n     */\n    class_1.prototype.getInputElement = function () {\n        return Promise.resolve(this.nativeInput);\n    };\n    class_1.prototype.emitStyle = function () {\n        this.ionStyle.emit({\n            'interactive': true,\n            'textarea': true,\n            'input': true,\n            'interactive-disabled': this.disabled,\n            'has-placeholder': this.placeholder != null,\n            'has-value': this.hasValue(),\n            'has-focus': this.hasFocus\n        });\n    };\n    /**\n     * Check if we need to clear the text input if clearOnEdit is enabled\n     */\n    class_1.prototype.checkClearOnEdit = function () {\n        if (!this.clearOnEdit) {\n            return;\n        }\n        // Did the input value change after it was blurred and edited?\n        if (this.didBlurAfterEdit && this.hasValue()) {\n            // Clear the input\n            this.value = '';\n        }\n        // Reset the flag\n        this.didBlurAfterEdit = false;\n    };\n    class_1.prototype.focusChange = function () {\n        // If clearOnEdit is enabled and the input blurred but has a value, set a flag\n        if (this.clearOnEdit && !this.hasFocus && this.hasValue()) {\n            this.didBlurAfterEdit = true;\n        }\n        this.emitStyle();\n    };\n    class_1.prototype.hasValue = function () {\n        return this.getValue() !== '';\n    };\n    class_1.prototype.getValue = function () {\n        return this.value || '';\n    };\n    class_1.prototype.render = function () {\n        var _a;\n        var _this = this;\n        var mode = getIonMode(this);\n        var value = this.getValue();\n        var labelId = this.inputId + '-lbl';\n        var label = findItemLabel(this.el);\n        if (label) {\n            label.id = labelId;\n        }\n        return (h(Host, { \"aria-disabled\": this.disabled ? 'true' : null, class: Object.assign(Object.assign({}, createColorClasses(this.color)), (_a = {}, _a[mode] = true, _a)) }, h(\"textarea\", { class: \"native-textarea\", ref: function (el) { return _this.nativeInput = el; }, autoCapitalize: this.autocapitalize, autoFocus: this.autofocus, disabled: this.disabled, maxLength: this.maxlength, minLength: this.minlength, name: this.name, placeholder: this.placeholder || '', readOnly: this.readonly, required: this.required, spellCheck: this.spellcheck, cols: this.cols, rows: this.rows, wrap: this.wrap, onInput: this.onInput, onBlur: this.onBlur, onFocus: this.onFocus, onKeyDown: this.onKeyDown }, value)));\n    };\n    Object.defineProperty(class_1.prototype, \"el\", {\n        get: function () { return getElement(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(class_1, \"watchers\", {\n        get: function () {\n            return {\n                \"debounce\": [\"debounceChanged\"],\n                \"disabled\": [\"disabledChanged\"],\n                \"value\": [\"valueChanged\"]\n            };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(class_1, \"style\", {\n        get: function () { return \".sc-ion-textarea-md-h{--background:initial;--color:initial;--placeholder-color:initial;--placeholder-font-style:initial;--placeholder-font-weight:initial;--placeholder-opacity:.5;--padding-top:0;--padding-bottom:0;--padding-start:0;--border-radius:0;display:block;position:relative;-ms-flex:1;flex:1;width:100%;-webkit-box-sizing:border-box;box-sizing:border-box;background:var(--background);color:var(--color);font-family:var(--ion-font-family,inherit);white-space:pre-wrap;z-index:2}.ion-color.sc-ion-textarea-md-h{background:initial;color:var(--ion-color-base)}ion-item.sc-ion-textarea-md-h, ion-item .sc-ion-textarea-md-h{-ms-flex-item-align:baseline;align-self:baseline}ion-item.sc-ion-textarea-md-h:not(.item-label), ion-item:not(.item-label) .sc-ion-textarea-md-h{--padding-start:0}.native-textarea.sc-ion-textarea-md{border-radius:var(--border-radius);margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;padding-left:var(--padding-start);padding-right:var(--padding-end);padding-top:var(--padding-top);padding-bottom:var(--padding-bottom);font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-indent:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit;display:block;width:100%;max-width:100%;max-height:100%;border:0;outline:none;background:transparent;-webkit-box-sizing:border-box;box-sizing:border-box;resize:none;-webkit-appearance:none;-moz-appearance:none;appearance:none}\\@supports ((-webkit-margin-start:0) or (margin-inline-start:0)) or (-webkit-margin-start:0){.native-textarea.sc-ion-textarea-md{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--padding-start);padding-inline-start:var(--padding-start);-webkit-padding-end:var(--padding-end);padding-inline-end:var(--padding-end)}}.native-textarea.sc-ion-textarea-md::-webkit-input-placeholder{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-textarea.sc-ion-textarea-md::-moz-placeholder{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-textarea.sc-ion-textarea-md:-ms-input-placeholder{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-textarea.sc-ion-textarea-md::-ms-input-placeholder{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-textarea.sc-ion-textarea-md::placeholder{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-textarea[disabled].sc-ion-textarea-md{opacity:.4}.cloned-input.sc-ion-textarea-md{left:0;top:0;position:absolute;pointer-events:none}[dir=rtl].sc-ion-textarea-md-h .cloned-input.sc-ion-textarea-md, [dir=rtl] .sc-ion-textarea-md-h .cloned-input.sc-ion-textarea-md, [dir=rtl].sc-ion-textarea-md .cloned-input.sc-ion-textarea-md{left:unset;right:unset;right:0}.sc-ion-textarea-md-h{--padding-top:10px;--padding-end:0;--padding-bottom:11px;--padding-start:8px;margin-left:0;margin-right:0;margin-top:8px;margin-bottom:0;font-size:inherit}.item-label-floating.sc-ion-textarea-md-h, .item-label-floating .sc-ion-textarea-md-h, .item-label-stacked.sc-ion-textarea-md-h, .item-label-stacked .sc-ion-textarea-md-h{--padding-top:8px;--padding-bottom:8px;--padding-start:0}\"; },\n        enumerable: true,\n        configurable: true\n    });\n    return class_1;\n}());\nvar textareaIds = 0;\nexport { Textarea as ion_textarea };\n"]},"metadata":{},"sourceType":"module"}